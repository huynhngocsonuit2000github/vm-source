pipeline {
    agent any

  environment {
        // These are constant defaults if needed
        BASE_IMAGE_NAME_API = 'huynhngocsonuit2000docker/azure-image:todo-app-be'
        BASE_IMAGE_NAME_FE  = 'huynhngocsonuit2000docker/azure-image:todo-app-fe'
    }

    stages {
        stage('Set Image Tags') {
            steps {
                script {
                    def now = new Date().format("yyyyMMdd-HHmm", TimeZone.getTimeZone("Asia/Ho_Chi_Minh"))
                    env.IMAGE_NAME_API = "${env.BASE_IMAGE_NAME_API}-${now}"
                    env.IMAGE_NAME_FE  = "${env.BASE_IMAGE_NAME_FE}-${now}"
                }
            }
        }

        stage('Clone Code') {
            steps {
                git url: 'https://github.com/huynhngocsonuit2000github/vm-source', branch: 'main'
            }
        }

        stage('Build Docker Image API') {
            steps {
                sh 'cd "./Case 1.1.2.5. Azure Kubernetes Service (AKS)/be/TodoApp" && docker build -t $IMAGE_NAME_API .'
            }
        }

        stage('Build Docker Image FE') {
            steps {
                sh 'cd "./Case 1.1.2.5. Azure Kubernetes Service (AKS)/fe/angular-todo" && docker build --build-arg CONFIG=aks -t $IMAGE_NAME_FE .'
            }
        }
        
        stage('Login to Docker Hub & Push') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push $IMAGE_NAME_API
                        docker push $IMAGE_NAME_FE
                    '''
                }
            }
        }

        stage('Prepare K8s Manifest') {
            steps {
                script {
                    dir('Case 1.1.2.5. Azure Kubernetes Service (AKS)/jenkins') {
                        sh '''
                        sed -e 's|\\${{BASE_IMAGE_NAME_API}}|'${IMAGE_NAME_API}'|g' \
                            -e 's|\\${{BASE_IMAGE_NAME_FE}}|'${IMAGE_NAME_FE}'|g' \
                            template.yaml > deployment.yaml
                        '''
                    }
                }
            }
        }
        
        stage('Deploy to Kubernetes') {
            steps {
                dir('Case 1.1.2.5. Azure Kubernetes Service (AKS)/jenkins') {
                    sh 'kubectl apply -f deployment.yaml'
                }
            }
        }
    }
}
